name: CryptoPrice
options:
  minimumXcodeGenVersion: '2.41.0'
  xcodeVersion: '16.2'
  preGenCommand: make pregen
  postGenCommand: make postgen
settings:
  base:
    DEVELOPMENT_TEAM: ${GEM_DEVELOPMENT_TEAM}
    CODE_SIGN_STYLE: ${GEM_CODE_SIGN_STYLE}
    IPHONEOS_DEPLOYMENT_TARGET: 16.0
    MARKETING_VERSION: 1.0.0
    CURRENT_PROJECT_VERSION: 1
    CLANG_ANALYZER_LOCALIZABILITY_NONLOCALIZED: YES
    LD_GENERATE_MAP_FILE: YES
  configs:
    Release:
      SWIFT_COMPILATION_MODE: wholemodule
    Debug:
      SWIFT_COMPILATION_MODE: incremental
targets:
  CryptoPrice:
    type: application
    platform: iOS
    supportedDestinations: [iOS]
    sources:
      - CryptoPrice
      - ./CryptoPrice
    settings:
      base:
        SUPPORTED_PLATFORMS: iphonesimulator iphoneos
        TARGETED_DEVICE_FAMILY: '1,2'
        PRODUCT_BUNDLE_IDENTIFIER: ${GEM_PRODUCT_BUNDLE_IDENTIFIER}
        ENABLE_PREVIEWS: YES
        INFOPLIST_KEY_UILaunchStoryboardName: LaunchScreen
        INFOPLIST_KEY_LSApplicationCategoryType: public.app-category.lifestyle
        SUPPORTS_MAC_DESIGNED_FOR_IPHONE_IPAD: NO
        SUPPORTS_XR_DESIGNED_FOR_IPHONE_IPAD: NO
        INFOPLIST_KEY_CFBundleDisplayName: ${PRODUCT_NAME}
    configFiles:
      Debug: CryptoPrice/Resources/debug.xcconfig
      Release: CryptoPrice/Resources/release.xcconfig
    preBuildScripts:
      - name: 🛠 SwiftGen
        runOnlyWhenInstalling: false
        basedOnDependencyAnalysis: true
        inputFiles:
          - CryptoPrice/Resources/Localization/en.lproj/Localizable.strings
        outputFiles:
          - CryptoPrice/Generated/Strings+Generated.swift
        script: |
          export PATH="$PATH:/opt/homebrew/bin"
          if which swiftgen >/dev/null; then
              swiftgen
          else
              echo "warning: SwiftGen not installed, download from https://github.com/SwiftGen/SwiftGen"
          fi
      - name: Swiftformat
        runOnlyWhenInstalling: false
        basedOnDependencyAnalysis: false
        script: |
          export PATH="$PATH:/opt/homebrew/bin"
          if which swiftformat >/dev/null; then
              swiftformat . --swiftversion 5.9
          else
              echo "error: SwiftFormat not installed, download from https://github.com/nicklockwood/SwiftFormat"
          fi
      - name: ⚠️ SwiftLint
        runOnlyWhenInstalling: false
        basedOnDependencyAnalysis: false
        script: |
          if [[ "$(uname -m)" == arm64 ]]; then
              export PATH="/opt/homebrew/bin:$PATH"
          fi

          if which swiftlint > /dev/null; then
              swiftlint
          else
              echo "warning: SwiftLint not installed, download from https://github.com/realm/SwiftLint"
          fi
    info:
      path: CryptoPrice/Resources/Info.plist
      properties:
        CFBundleDisplayName: ${PRODUCT_NAME}
        ITSAppUsesNonExemptEncryption: NO
        CFBundleVersion: $(CURRENT_PROJECT_VERSION)
        CFBundleShortVersionString: $(MARKETING_VERSION)
        LSRequiresIPhoneOS: YES
        UILaunchStoryboardName: "LaunchScreen"
        UIUserInterfaceStyle: "Light"
        UIApplicationSupportsIndirectInputEvents: YES
        UIRequiredDeviceCapabilities: [armv7]
        UISupportedInterfaceOrientations:
          - UIInterfaceOrientationPortrait
        UISupportedInterfaceOrientations~ipad:
          - UIInterfaceOrientationPortrait
        UISupportsDocumentBrowser: true
        UIRequiresFullScreen: true
  # Unit test target
  CryptoPriceTests:
    type: bundle.unit-test
    platform: iOS
    sources:
      - CryptoPriceTests
    dependencies:
      - target: CryptoPrice
    info:
      path: CryptoPriceTests/Info.plist
      properties:
        CFBundleDevelopmentRegion: $(DEVELOPMENT_LANGUAGE)
        CFBundleExecutable: $(EXECUTABLE_NAME)
        CFBundleIdentifier: $(PRODUCT_BUNDLE_IDENTIFIER)
        CFBundleInfoDictionaryVersion: "6.0"
        CFBundleName: $(PRODUCT_NAME)
        CFBundlePackageType: $(PRODUCT_BUNDLE_PACKAGE_TYPE)
        CFBundleShortVersionString: "1.0"
        CFBundleVersion: "1"
    settings:
      base:
        PRODUCT_BUNDLE_IDENTIFIER: ${GEM_PRODUCT_BUNDLE_IDENTIFIER}.tests
schemes:
  CryptoPrice:
    build:
      targets:
        CryptoPrice: all
    run:
      config: Debug
    test:
      targets:
        - CryptoPriceTests
      config: Debug
      gatherCoverageData: true
      coverageTargets:
        - CryptoPrice
      excludedTargets:
        - "**/Generated/**"
        - "**/Resources/**"
        - "**/App/**"
        - "**/View/**"
        - "**/*View.swift"
        - "**/Components/**"

  CryptoPriceTests:
    build:
      targets:
        CryptoPriceTests: [test, run]
    test:
      targets:
        - CryptoPriceTests
      config: Debug
      gatherCoverageData: true
      coverageTargets:
        - CryptoPrice